/*
 * Copyright 2010-2015 Allette Systems (Australia)
 * http://www.allette.com.au
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.pageseeder.diffx.action;

import org.pageseeder.diffx.config.DiffXConfig;
import org.pageseeder.diffx.event.DiffXEvent;
import org.pageseeder.diffx.format.DiffXFormatter;

import java.util.ArrayList;
import java.util.List;

/**
 * Generates a list of operations from the output of the algorithms.
 *
 * @author Christophe Lauret
 * @version 0.9.0
 */
public class OperationFormatter implements DiffXFormatter {

  /**
   * The list of actions produced by this formatter.
   */
  private final List<Operation> operations = new ArrayList<>();

  /**
   * Adds the event to an operation of type 'DEL'.
   *
   * @param event The event to delete.
   * @see Operator#DEL
   */
  public void delete(DiffXEvent event) {
    this.operations.add(new Operation(Operator.DEL, event));
  }

  /**
   * Adds the event to an operation of type 'KEEP'.
   *
   * @param event The event to format.
   * @see Operator#MATCH
   */
  public void format(DiffXEvent event) {
    this.operations.add(new Operation(Operator.MATCH, event));
  }

  /**
   * Adds the event to an action type 'INS'.
   *
   * @param event The event to insert.
   * @see Operator#INS
   */
  public void insert(DiffXEvent event) {
    this.operations.add(new Operation(Operator.INS, event));
  }

  /**
   * Does nothing - the configuration does not affect the action.
   */
  public void setConfig(DiffXConfig config) {
  }

  /**
   * @return the list of actions generated by this formatter.
   */
  public List<Operation> getOperations() {
    return this.operations;
  }

}
